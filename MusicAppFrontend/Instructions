Individual Project – Phase 2: Functional UI & Database  Model Design 
Objective 
The goal of this phase is to simulate a fully structured project without implementing backend  logic or connecting to a real database yet. You will finalize the entire front-end layout and  structure, link navigation, and database design to give a clear understanding of your complete  system. This phase is essential for visualizing the full scope of your application and preparing for  implementation in the next stage. 
What You Must Submit in This Phase 
1. Complete Page Designs 
• Design and finalize the UI of all pages in your project, including but not limited to: o Home Page (with links to all sections/modules) 
o Login Page 
o Registration Page (if applicable) 
o Dashboards (for users, admins, etc.) 
o List pages for displaying data 
o Create/Edit/Delete pages (with placeholder content) 
o Details/Information pages 
• Use a consistent and visually appealing design (Bootstrap, CSS, etc.) to ensure  professional appearance. 
2. Fully Functional Navigation 
• All menus, buttons, and internal links must lead to the correct pages. • Users (your instructor or evaluator) should be able to freely browse the entire project structure using the navigation provided, even if the content is static or placeholder. 
3. Completed Models Folder 
• Create C# classes for all models representing your database tables (properties only, no  logic or annotations). 
• Each model should represent one table clearly, helping us estimate the scale of your data  layer. 
4. Entity Relationship Diagram (ERD) 
• Provide a clear ER diagram showing: 
o Table names
o Primary keys (PK) 
o Foreign keys (FK) 
o Relationship types (1:1, 1:N, M:N) 
• Use any tool you prefer (e.g., dbdiagram.io, draw.io, Lucidchart) and submit as image or  PDF. 
5. Updated Business Logic Document 
• Write or update a clear explanation covering: 
o The purpose and goals of your project 
o Who the users are and what roles they have 
o What each page/module is supposed to do 
o How your system will behave once logic and database are implemented 
Not Required Yet 
• No actual database connection 
• No C# backend logic 
• No authentication or registration logic 
• No CRUD functionality — only simulate with placeholder designs and static data 
Submission Structure 
• Models/: All data model classes 
• Views/: All designed pages with working links 
• ER Diagram: As image or PDF 
• Business Logic Summary: Word or PDF 
 
��� Important Notes 
• Originality is mandatory: 
• If there is an accidental coincidence between project names or project styles,  points will be deducted. 
• You must make sure your idea, layout, and approach are individually  
developed. 
• Visual quality and navigation flow will directly affect your grade. • Every link must lead somewhere meaningful to simulate the final working project.
