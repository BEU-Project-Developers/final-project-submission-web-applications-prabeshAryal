@model PagedResponse<MusicApp.Models.DTOs.SongDto>

@{
    ViewData["Title"] = "Songs";
    int currentPage = Model?.CurrentPage ?? 1;
    int totalPages = Model?.TotalPages ?? 1;
    int pageSize = Model?.PageSize ?? 20;
}

@if (User.IsInRole("Admin"))
{
    <!-- Admin Table View -->
    <div class="min-h-screen bg-[var(--ytm-bg-primary)] text-[var(--ytm-text-primary)] p-6">
        <div class="flex justify-between items-center mb-6">
            <h1 class="text-3xl font-bold">Songs Management</h1>
            <a asp-action="Create" class="bg-[var(--ytm-accent-red)] hover:bg-red-700 text-[var(--ytm-text-primary)] px-4 py-2 rounded-lg transition-colors">
                <i class="fas fa-plus mr-2"></i>Add New Song
            </a>
        </div>
        <div class="bg-[var(--ytm-bg-secondary)] rounded-lg shadow-xl overflow-hidden">
            <div class="overflow-x-auto">
                <table class="w-full">
                    <thead class="bg-[var(--ytm-bg-tertiary)]">
                        <tr>
                            <th class="px-6 py-4 text-left text-sm font-semibold text-[var(--ytm-text-secondary)]">Title</th>
                            <th class="px-6 py-4 text-left text-sm font-semibold text-[var(--ytm-text-secondary)]">Artist</th>
                            <th class="px-6 py-4 text-left text-sm font-semibold text-[var(--ytm-text-secondary)]">Album</th>
                            <th class="px-6 py-4 text-left text-sm font-semibold text-[var(--ytm-text-secondary)]">Duration</th>
                            <th class="px-6 py-4 text-left text-sm font-semibold text-[var(--ytm-text-secondary)]">Genre</th>
                            <th class="px-6 py-4 text-center text-sm font-semibold text-[var(--ytm-text-secondary)]">Actions</th>
                        </tr>
                    </thead>
                    <tbody class="divide-y divide-[var(--ytm-border-color)]">                        @foreach (var song in Model.Data)
                        {
                            <tr class="hover:bg-[var(--ytm-bg-tertiary)] transition-colors group">
                                <td class="px-6 py-4">
                                    <div class="flex items-center gap-3">
                                        <button class="play-btn opacity-0 group-hover:opacity-100 transition-opacity" 
                                                data-play-song='@Html.Raw(Json.Serialize(new { 
                                                    id = song.Id, 
                                                    title = song.Title, 
                                                    artistName = song.Artists != null && song.Artists.Any() ? string.Join(", ", song.Artists.Select(a => a.Name)) : song.ArtistName, 
                                                    audioUrl = song.AudioUrl, 
                                                    coverImageUrl = song.CoverImageUrl 
                                                }))'
                                                data-playlist='@Html.Raw(Json.Serialize(Model.Data.Select(s => new { 
                                                    id = s.Id, 
                                                    title = s.Title, 
                                                    artistName = s.Artists != null && s.Artists.Any() ? string.Join(", ", s.Artists.Select(a => a.Name)) : s.ArtistName, 
                                                    audioUrl = s.AudioUrl, 
                                                    coverImageUrl = s.CoverImageUrl 
                                                })))'
                                                data-index="@Model.Data.ToList().IndexOf(song)"
                                                title="Play song">
                                            <i class="bi bi-play-fill text-[var(--ytm-accent-red)] text-xl"></i>
                                        </button>                                        <div class="font-medium text-[var(--ytm-text-primary)]">@song.Title</div>
                                    </div>
                                </td>
                                <td class="px-6 py-4">
                                    <div class="text-[var(--ytm-text-secondary)]">
                                        @if (song.Artists != null && song.Artists.Any())
                                        {
                                            @for (int i = 0; i < song.Artists.Count; i++)
                                            {
                                                var artist = song.Artists[i];
                                                <a asp-controller="Artists" asp-action="Details" asp-route-id="@artist.Id" 
                                                   class="hover:text-[var(--ytm-text-primary)] transition-colors">
                                                    @artist.Name
                                                </a>@(i < song.Artists.Count - 1 ? ", " : "")
                                            }
                                        }
                                        else
                                        {
                                            @if (!string.IsNullOrEmpty(song.ArtistName))
                                            {
                                                <a asp-controller="Artists" asp-action="Details" asp-route-id="@song.ArtistId" 
                                                   class="hover:text-[var(--ytm-text-primary)] transition-colors">
                                                    @song.ArtistName
                                                </a>
                                            }
                                            else
                                            {
                                                @:-
                                            }
                                        }
                                    </div>
                                </td>                                <td class="px-6 py-4">
                                    <div class="text-[var(--ytm-text-secondary)]">@(song.AlbumTitle ?? "-")</div>
                                </td>                                <td class="px-6 py-4">
                                    <div class="text-[var(--ytm-text-secondary)]">
                                        @if (song.Duration.HasValue && song.Duration.Value != TimeSpan.Zero)
                                        {
                                            @song.Duration.Value.ToString(@"mm\:ss")
                                        }
                                        else
                                        {
                                            @:--:--
                                        }
                                    </div>
                                </td>
                                <td class="px-6 py-4">
                                    <div class="text-[var(--ytm-text-secondary)]">@(song.Genre ?? "-")</div>
                                </td>
                                <td class="px-6 py-4">
                                    <div class="flex justify-center space-x-2">
                                        <a asp-action="Details" asp-route-id="@song.Id"
                                           class="bg-[var(--ytm-bg-tertiary)] hover:bg-[var(--ytm-border-color)] text-[var(--ytm-text-primary)] px-3 py-1 rounded text-sm transition-colors">
                                            <i class="fas fa-eye mr-1"></i>View
                                        </a>
                                        <a asp-action="Edit" asp-route-id="@song.Id" 
                                           class="bg-[var(--ytm-bg-tertiary)] hover:bg-[var(--ytm-border-color)] text-[var(--ytm-text-primary)] px-3 py-1 rounded text-sm transition-colors">
                                            <i class="fas fa-edit mr-1"></i>Edit
                                        </a>
                                        <form asp-action="DeleteConfirmed" asp-route-id="@song.Id" method="post" style="display: inline;" 
                                              onsubmit="return confirm('Are you sure you want to delete this song?');">
                                            @Html.AntiForgeryToken()
                                            <button type="submit" 
                                                    class="bg-[var(--ytm-accent-red)] hover:bg-red-700 text-[var(--ytm-text-primary)] px-3 py-1 rounded text-sm transition-colors">
                                                <i class="fas fa-trash mr-1"></i>Delete
                                            </button>
                                        </form>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
        <!-- Pagination Controls -->
        @if (totalPages > 1)
        {
            <nav class="flex justify-center mt-10">
                <ul class="inline-flex -space-x-px">
                    <li>
                        <a asp-action="Index" asp-route-page="@(currentPage - 1)" asp-route-pageSize="@pageSize" class="px-3 py-2 ml-0 leading-tight text-[var(--ytm-text-secondary)] bg-[var(--ytm-bg-tertiary)] border border-[var(--ytm-border-color)] rounded-l-lg @(currentPage == 1 ? "pointer-events-none opacity-50" : "hover:bg-[var(--ytm-bg-secondary)]")">Prev</a>
                    </li>
                    @for (int i = 1; i <= totalPages; i++)
                    {
                        <li>
                            <a asp-action="Index" asp-route-page="@i" asp-route-pageSize="@pageSize" class="px-3 py-2 leading-tight border border-[var(--ytm-border-color)] @(i == currentPage ? "bg-[var(--ytm-accent-red)] text-[var(--ytm-text-primary)]" : "bg-[var(--ytm-bg-tertiary)] text-[var(--ytm-text-secondary)] hover:bg-[var(--ytm-bg-secondary)]")">@i</a>
                        </li>
                    }
                    <li>
                        <a asp-action="Index" asp-route-page="@(currentPage + 1)" asp-route-pageSize="@pageSize" class="px-3 py-2 leading-tight text-[var(--ytm-text-secondary)] bg-[var(--ytm-bg-tertiary)] border border-[var(--ytm-border-color)] rounded-r-lg @(currentPage == totalPages ? "pointer-events-none opacity-50" : "hover:bg-[var(--ytm-bg-secondary)]")">Next</a>
                    </li>
                </ul>
            </nav>
        }
        @if (!(Model.Data?.Any() ?? false))
        {
            <div class="mt-8 px-4 py-3 rounded-lg bg-[var(--ytm-bg-secondary)] text-[var(--ytm-text-secondary)] border border-[var(--ytm-border-color)]">No songs found. Create your first song!</div>
        }
    </div>
}
else
{
    <!-- User Song Grid/Table View (implement as needed) -->
    <div class="min-h-screen bg-[var(--ytm-bg-primary)] text-[var(--ytm-text-primary)] p-6">
        <h1 class="text-3xl font-bold mb-6">Songs</h1>
        <div class="bg-[var(--ytm-bg-secondary)] rounded-lg shadow-xl overflow-hidden">
            <div class="overflow-x-auto">
                <table class="w-full">
                    <thead class="bg-[var(--ytm-bg-tertiary]">
                        <tr>
                            <th class="px-6 py-4 text-left text-sm font-semibold text-[var(--ytm-text-secondary)]">Title</th>
                            <th class="px-6 py-4 text-left text-sm font-semibold text-[var(--ytm-text-secondary)]">Artist</th>
                            <th class="px-6 py-4 text-left text-sm font-semibold text-[var(--ytm-text-secondary)]">Album</th>
                            <th class="px-6 py-4 text-left text-sm font-semibold text-[var(--ytm-text-secondary)]">Duration</th>
                            <th class="px-6 py-4 text-left text-sm font-semibold text-[var(--ytm-text-secondary)]">Genre</th>
                        </tr>
                    </thead>
                    <tbody class="divide-y divide-[var(--ytm-border-color)]">                        @foreach (var song in Model.Data)
                        {
                            <tr class="hover:bg-[var(--ytm-bg-tertiary)] transition-colors group">
                                <td class="px-6 py-4">
                                    <div class="flex items-center gap-3">
                                        <button class="play-btn opacity-0 group-hover:opacity-100 transition-opacity" 
                                                data-play-song='@Html.Raw(Json.Serialize(new { 
                                                    id = song.Id, 
                                                    title = song.Title, 
                                                    artistName = song.Artists != null && song.Artists.Any() ? string.Join(", ", song.Artists.Select(a => a.Name)) : song.ArtistName, 
                                                    audioUrl = song.AudioUrl, 
                                                    coverImageUrl = song.CoverImageUrl 
                                                }))'
                                                data-playlist='@Html.Raw(Json.Serialize(Model.Data.Select(s => new { 
                                                    id = s.Id, 
                                                    title = s.Title, 
                                                    artistName = s.Artists != null && s.Artists.Any() ? string.Join(", ", s.Artists.Select(a => a.Name)) : s.ArtistName, 
                                                    audioUrl = s.AudioUrl, 
                                                    coverImageUrl = s.CoverImageUrl 
                                                })))'
                                                data-index="@Model.Data.ToList().IndexOf(song)"
                                                title="Play song">
                                            <i class="bi bi-play-fill text-[var(--ytm-accent-red)] text-xl"></i>
                                        </button>
                                        <div class="font-medium text-[var(--ytm-text-primary)] cursor-pointer" 
                                             onclick="window.location.href='@Url.Action("Details", new { id = song.Id })'">
                                            @song.Title                                        </div>
                                    </div>
                                </td>
                                <td class="px-6 py-4">
                                    <div class="text-[var(--ytm-text-secondary)]">
                                        @if (song.Artists != null && song.Artists.Any())
                                        {
                                            @for (int i = 0; i < song.Artists.Count; i++)
                                            {
                                                var artist = song.Artists[i];
                                                <a asp-controller="Artists" asp-action="Details" asp-route-id="@artist.Id" 
                                                   class="hover:text-[var(--ytm-text-primary)] transition-colors">
                                                    @artist.Name
                                                </a>@(i < song.Artists.Count - 1 ? ", " : "")
                                            }
                                        }
                                        else
                                        {
                                            @if (!string.IsNullOrEmpty(song.ArtistName))
                                            {
                                                <a asp-controller="Artists" asp-action="Details" asp-route-id="@song.ArtistId" 
                                                   class="hover:text-[var(--ytm-text-primary)] transition-colors">
                                                    @song.ArtistName
                                                </a>
                                            }
                                            else
                                            {
                                                @:-
                                            }
                                        }
                                    </div>
                                </td><td class="px-6 py-4">
                                    <div class="text-[var(--ytm-text-secondary)]">@(song.AlbumTitle ?? "-")</div>
                                </td>                                <td class="px-6 py-4">
                                    <div class="text-[var(--ytm-text-secondary)]">
                                        @if (song.Duration.HasValue && song.Duration.Value != TimeSpan.Zero)
                                        {
                                            @song.Duration.Value.ToString(@"mm\:ss")
                                        }
                                        else
                                        {
                                            @:--:--
                                        }
                                    </div>
                                </td>
                                <td class="px-6 py-4">
                                    <div class="text-[var(--ytm-text-secondary)]">@(song.Genre ?? "-")</div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
        <!-- Pagination Controls -->
        @if (totalPages > 1)
        {
            <nav class="flex justify-center mt-10">
                <ul class="inline-flex -space-x-px">
                    <li>
                        <a asp-action="Index" asp-route-page="@(currentPage - 1)" asp-route-pageSize="@pageSize" class="px-3 py-2 ml-0 leading-tight text-[var(--ytm-text-secondary)] bg-[var(--ytm-bg-tertiary)] border border-[var(--ytm-border-color)] rounded-l-lg @(currentPage == 1 ? "pointer-events-none opacity-50" : "hover:bg-[var(--ytm-bg-secondary)]")">Prev</a>
                    </li>
                    @for (int i = 1; i <= totalPages; i++)
                    {
                        <li>
                            <a asp-action="Index" asp-route-page="@i" asp-route-pageSize="@pageSize" class="px-3 py-2 leading-tight border border-[var(--ytm-border-color)] @(i == currentPage ? "bg-[var(--ytm-accent-red)] text-[var(--ytm-text-primary)]" : "bg-[var(--ytm-bg-tertiary)] text-[var(--ytm-text-secondary)] hover:bg-[var(--ytm-bg-secondary)]")">@i</a>
                        </li>
                    }
                    <li>
                        <a asp-action="Index" asp-route-page="@(currentPage + 1)" asp-route-pageSize="@pageSize" class="px-3 py-2 leading-tight text-[var(--ytm-text-secondary)] bg-[var(--ytm-bg-tertiary)] border border-[var(--ytm-border-color)] rounded-r-lg @(currentPage == totalPages ? "pointer-events-none opacity-50" : "hover:bg-[var(--ytm-bg-secondary)]")">Next</a>
                    </li>
                </ul>
            </nav>
        }
        @if (!(Model.Data?.Any() ?? false))
        {
            <div class="mt-8 px-4 py-3 rounded-lg bg-[var(--ytm-bg-secondary)] text-[var(--ytm-text-secondary)] border border-[var(--ytm-border-color)]">No songs found. Check back later!</div>
        }
    </div>
}

@section Scripts {
<script>
    function showAddToPlaylistModal(songId, songTitle) {
        fetch('/Playlists/GetUserPlaylists', {
            method: 'GET',
            headers: {
                'RequestVerificationToken': getAntiForgeryToken()
            }
        })
        .then(response => response.json())
        .then(data => {
            const playlists = data.data || [];
            if (playlists.length === 0) {
                alert('You don\'t have any playlists yet. Create a playlist first!');
                return;
            }
            const modalHtml = `
                <div id="playlistModal" style="position: fixed; top: 0; left: 0; width: 100%; height: 100%; background: rgba(0,0,0,0.5); z-index: 1000; display: flex; align-items: center; justify-content: center;">
                    <div style="background: var(--ytm-bg-primary); border-radius: 8px; padding: 2rem; max-width: 400px; width: 90%; max-height: 80vh; overflow-y: auto;">
                        <h3 style="color: var(--ytm-text-primary); margin-bottom: 1rem;">Add Song to Playlist</h3>
                        <p style="color: var(--ytm-text-secondary); margin-bottom: 1.5rem;">Select a playlist to add <b>${songTitle}</b>:</p>
                        <div id="playlistList" style="max-height: 300px; overflow-y: auto; margin-bottom: 1.5rem;">
                            ${playlists.map(playlist => `
                                <div class="playlist-item" data-playlist-id="${playlist.id}" style="
                                    display: flex; align-items: center; padding: 0.75rem; margin-bottom: 0.5rem; 
                                    border: 1px solid var(--ytm-border-color); border-radius: 4px; cursor: pointer;
                                    background: var(--ytm-bg-secondary); transition: background-color 0.2s;
                                " onmouseover="this.style.backgroundColor='var(--ytm-bg-tertiary)'" onmouseout="this.style.backgroundColor='var(--ytm-bg-secondary)'">
                                    ${playlist.coverImageUrl ? `<img src="${playlist.coverImageUrl}" alt="${playlist.name}" style="width: 40px; height: 40px; border-radius: 4px; margin-right: 0.75rem;">` : '<div style="width: 40px; height: 40px; background: var(--ytm-bg-tertiary); border-radius: 4px; margin-right: 0.75rem; display: flex; align-items: center; justify-content: center;"><i class="bi bi-music-note-list" style="color: var(--ytm-text-secondary);"></i></div>'}
                                    <div>
                                        <div style="color: var(--ytm-text-primary); font-weight: 500;">${playlist.name}</div>
                                        <div style="color: var(--ytm-text-secondary); font-size: 0.9rem;">${playlist.songCount} songs</div>
                                    </div>
                                </div>
                            `).join('')}
                        </div>
                        <div style="display: flex; gap: 1rem; justify-content: flex-end;">
                            <button id="cancelPlaylistModal" style="
                                background: transparent; border: 1px solid var(--ytm-border-color); color: var(--ytm-text-secondary); 
                                padding: 0.5rem 1rem; border-radius: 4px; cursor: pointer;">Cancel</button>
                        </div>
                    </div>
                </div>
            `;
            document.body.insertAdjacentHTML('beforeend', modalHtml);
            document.getElementById('cancelPlaylistModal').addEventListener('click', closePlaylistModal);
            document.querySelectorAll('.playlist-item').forEach(item => {
                item.addEventListener('click', function() {
                    const playlistId = this.dataset.playlistId;
                    addSongToPlaylist(songId, playlistId, songTitle);
                });
            });
            document.getElementById('playlistModal').addEventListener('click', function(e) {
                if (e.target === this) {
                    closePlaylistModal();
                }
            });
        })
        .catch(error => {
            console.error('Error fetching playlists:', error);
            alert('Error loading playlists. Please try again.');
        });
    }
    function closePlaylistModal() {
        const modal = document.getElementById('playlistModal');
        if (modal) {
            modal.remove();
        }
    }
    function addSongToPlaylist(songId, playlistId, songTitle) {
        fetch(`/api/Playlists/${playlistId}/songs`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'RequestVerificationToken': getAntiForgeryToken()
            },
            body: JSON.stringify({ songId: songId })
        })
        .then(response => {
            if (response.ok) {
                alert(`'${songTitle}' added to playlist!`);
                closePlaylistModal();
            } else {
                response.text().then(text => alert('Failed to add song to playlist: ' + text));
            }
        })
        .catch(error => alert('Error adding to playlist: ' + error));
    }
    function getAntiForgeryToken() {
        const tokenField = document.querySelector('input[name="__RequestVerificationToken"]');
        return tokenField ? tokenField.value : '';
    }
</script>
}