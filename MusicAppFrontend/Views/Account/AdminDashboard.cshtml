@{
    ViewData["Title"] = "Admin Dashboard";
    var recentActivities = new[] {
        new { Type = "user", Username = "newuser123", ProfileImageUrl = (string)null, Timestamp = "5 mins ago", Description = "New user registered" },
        new { Type = "album", Username = "admin", ProfileImageUrl = (string)null, Timestamp = "1 hour ago", Description = "New album \"Album Title\" by Artist Name added" }
    };
}

<div class="container-fluid mt-4">
    <!-- Statistics Cards -->
    <div class="row mb-4">
        <div class="col-md-3">
            <div class="card bg-primary text-white">
                <div class="card-body">
                    <h5 class="card-title">Total Users</h5>
                    <h2 class="card-text">1,234</h2>
                    <p class="card-text"><small>+12% from last month</small></p>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card bg-success text-white">
                <div class="card-body">
                    <h5 class="card-title">Total Songs</h5>
                    <h2 class="card-text">5,678</h2>
                    <p class="card-text"><small>+8% from last month</small></p>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card bg-info text-white">
                <div class="card-body">
                    <h5 class="card-title">Total Artists</h5>
                    <h2 class="card-text">890</h2>
                    <p class="card-text"><small>+5% from last month</small></p>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card bg-warning text-white">
                <div class="card-body">
                    <h5 class="card-title">Total Playlists</h5>
                    <h2 class="card-text">2,345</h2>
                    <p class="card-text"><small>+15% from last month</small></p>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <!-- Quick Actions -->
        <div class="col-md-4">
            <div class="card mb-4">
                <div class="card-header">
                    <h5 class="mb-0">Quick Actions</h5>
                </div>
                <div class="card-body">
                    <div class="d-grid gap-2">
                        <a href="@Url.Action("Create", "Artists")" class="btn btn-outline-primary">Add New Artist</a>
                        <a href="@Url.Action("Create", "Albums")" class="btn btn-outline-primary">Add New Album</a>
                        <a href="@Url.Action("Create", "Songs")" class="btn btn-outline-primary">Add New Song</a>
                        <a href="@Url.Action("Index", "Users")" class="btn btn-outline-primary">Manage Users</a>
                    </div>
                </div>
            </div>
        </div>

        <!-- Recent Activity -->
        <div class="col-md-8">
            <div class="card mb-4">
                <div class="card-header">
                    <h5 class="mb-0">Recent Activity</h5>
                </div>
                <div class="card-body">
                    <div class="list-group">
                        @foreach (var activity in recentActivities)
                        {
                            <a href="#" class="list-group-item list-group-item-action">
                                <div class="d-flex w-100 justify-content-between">
                                    <h6 class="mb-1">@activity.Description</h6>
                                    <small>@activity.Timestamp</small>
                                </div>
                                <p class="mb-1">User: @activity.Username</p>
                                <img src="@(string.IsNullOrEmpty(activity.ProfileImageUrl) ? "/assets/default-profile.png" : activity.ProfileImageUrl)" 
                                     class="rounded-circle me-2" width="32" height="32" alt="User Profile"
                                     onerror="this.onerror=null; this.src='/assets/default-profile.png';">
                            </a>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Content Management -->
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0">Content Management</h5>
                </div>
                <div class="card-body">
                    <ul class="nav nav-tabs" id="contentTabs" role="tablist">
                        <li class="nav-item">
                            <a class="nav-link active" id="users-tab" data-bs-toggle="tab" href="#users" role="tab">Users</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" id="artists-tab" data-bs-toggle="tab" href="#artists" role="tab">Artists</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" id="albums-tab" data-bs-toggle="tab" href="#albums" role="tab">Albums</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" id="songs-tab" data-bs-toggle="tab" href="#songs" role="tab">Songs</a>
                        </li>
                    </ul>                    <div class="tab-content mt-3" id="contentTabsContent">
                        <div class="tab-pane fade show active" id="users" role="tabpanel">
                            <div class="d-flex justify-content-between align-items-center mb-3">
                                <h6 class="mb-0">User Management</h6>
                                <a href="@Url.Action("Index", "Users")" class="btn btn-sm btn-primary">
                                    <i class="bi bi-arrow-right"></i> Full Management
                                </a>
                            </div>
                            <div id="users-content">
                                <div class="text-center py-4">
                                    <div class="spinner-border" role="status">
                                        <span class="visually-hidden">Loading...</span>
                                    </div>
                                    <p class="mt-2">Loading users...</p>
                                </div>
                            </div>
                        </div>
                        <div class="tab-pane fade" id="artists" role="tabpanel">
                            <div class="d-flex justify-content-between align-items-center mb-3">
                                <h6 class="mb-0">Artist Management</h6>
                                <div>
                                    <a href="@Url.Action("Create", "Artists")" class="btn btn-sm btn-success me-2">
                                        <i class="bi bi-plus"></i> Add Artist
                                    </a>
                                    <a href="@Url.Action("Index", "Artists")" class="btn btn-sm btn-primary">
                                        <i class="bi bi-arrow-right"></i> Full Management
                                    </a>
                                </div>
                            </div>
                            <div id="artists-content">
                                <div class="text-center py-4">
                                    <div class="spinner-border" role="status">
                                        <span class="visually-hidden">Loading...</span>
                                    </div>
                                    <p class="mt-2">Loading artists...</p>
                                </div>
                            </div>
                        </div>
                        <div class="tab-pane fade" id="albums" role="tabpanel">
                            <div class="d-flex justify-content-between align-items-center mb-3">
                                <h6 class="mb-0">Album Management</h6>
                                <div>
                                    <a href="@Url.Action("Create", "Albums")" class="btn btn-sm btn-success me-2">
                                        <i class="bi bi-plus"></i> Add Album
                                    </a>
                                    <a href="@Url.Action("Index", "Albums")" class="btn btn-sm btn-primary">
                                        <i class="bi bi-arrow-right"></i> Full Management
                                    </a>
                                </div>
                            </div>
                            <div id="albums-content">
                                <div class="text-center py-4">
                                    <div class="spinner-border" role="status">
                                        <span class="visually-hidden">Loading...</span>
                                    </div>
                                    <p class="mt-2">Loading albums...</p>
                                </div>
                            </div>
                        </div>
                        <div class="tab-pane fade" id="songs" role="tabpanel">
                            <div class="d-flex justify-content-between align-items-center mb-3">
                                <h6 class="mb-0">Song Management</h6>
                                <div>
                                    <a href="@Url.Action("Create", "Songs")" class="btn btn-sm btn-success me-2">
                                        <i class="bi bi-plus"></i> Add Song
                                    </a>
                                    <a href="@Url.Action("Index", "Songs")" class="btn btn-sm btn-primary">
                                        <i class="bi bi-arrow-right"></i> Full Management
                                    </a>
                                </div>
                            </div>
                            <div id="songs-content">
                                <div class="text-center py-4">
                                    <div class="spinner-border" role="status">
                                        <span class="visually-hidden">Loading...</span>
                                    </div>
                                    <p class="mt-2">Loading songs...</p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Load users content on page load
            loadUsersContent();
            
            // Handle tab switching
            const tabLinks = document.querySelectorAll('#contentTabs .nav-link');
            tabLinks.forEach(tab => {
                tab.addEventListener('shown.bs.tab', function(e) {
                    const targetTab = e.target.getAttribute('href').substring(1);
                    loadTabContent(targetTab);
                });
            });
        });

        function loadTabContent(tabName) {
            switch(tabName) {
                case 'users':
                    loadUsersContent();
                    break;
                case 'artists':
                    loadArtistsContent();
                    break;
                case 'albums':
                    loadAlbumsContent();
                    break;
                case 'songs':
                    loadSongsContent();
                    break;
            }
        }        async function loadUsersContent() {
            const container = document.getElementById('users-content');
            if (!container) return;
            
            try {
                const response = await fetch('/Users/GetUsers');
                const result = await response.json();
                
                if (result && result.success && Array.isArray(result.data)) {
                    const users = result.data.slice(0, 5); // Show only first 5
                    let html = '<div class="table-responsive"><table class="table table-sm"><thead><tr><th>User</th><th>Email</th><th>Roles</th></tr></thead><tbody>';
                    
                    users.forEach(user => {
                        const roles = user.roles && user.roles.length > 0 ? user.roles.join(', ') : 'No Roles';
                        html += '<tr>';
                        html += '<td><img src="' + (user.profileImageUrl || '/assets/default-profile.png') + '" class="rounded-circle me-2" width="25" height="25">' + user.firstName + ' ' + user.lastName + '</td>';
                        html += '<td>' + user.email + '</td>';
                        html += '<td><small>' + roles + '</small></td>';
                        html += '</tr>';
                    });
                    
                    html += '</tbody></table></div>';
                    if (result.data.length > 5) {
                        html += '<p class="text-muted text-center mt-2">Showing 5 of ' + result.data.length + ' users</p>';
                    }
                    
                    container.innerHTML = html;
                } else {
                    container.innerHTML = '<p class="text-muted text-center">Failed to load users</p>';
                }
            } catch (error) {
                container.innerHTML = '<p class="text-danger text-center">Error loading users</p>';
            }
        }async function loadArtistsContent() {
            const container = document.getElementById('artists-content');
            if (!container) return;
            
            try {                const response = await fetch('http://localhost:5117/api/Artists?pageSize=5');
                const result = await response.json();
                
                if (result && result.data) {
                    const artists = result.data;
                    let html = '<div class="table-responsive"><table class="table table-sm"><thead><tr><th>Artist</th><th>Genre</th><th>Albums</th><th>Actions</th></tr></thead><tbody>';
                      artists.forEach(artist => {
                        html += '<tr>';
                        html += '<td><img src="' + (artist.imageUrl || '/assets/default-artist.png') + '" class="rounded me-2" width="25" height="25">' + artist.name + '</td>';
                        html += '<td>' + (artist.genre || 'N/A') + '</td>';
                        html += '<td>' + (artist.albumsCount || 0) + '</td>';
                        html += '<td>' +
                            '<a href="/Artists/Edit/' + artist.id + '" class="btn btn-sm btn-outline-primary me-1">Edit</a>' +
                            '<a href="/Artists/Delete/' + artist.id + '" class="btn btn-sm btn-outline-danger">Delete</a>' +
                            '</td>';
                        html += '</tr>';
                    });
                    
                    html += '</tbody></table></div>';
                    container.innerHTML = html;
                } else {
                    container.innerHTML = '<p class="text-muted text-center">No artists found</p>';
                }
            } catch (error) {
                container.innerHTML = '<p class="text-danger text-center">Error loading artists</p>';
            }
        }        async function loadAlbumsContent() {
            const container = document.getElementById('albums-content');
            if (!container) return;
            
            try {                const response = await fetch('http://localhost:5117/api/Albums?pageSize=5');
                const result = await response.json();
                
                if (result && result.data) {
                    const albums = result.data;
                    let html = '<div class="table-responsive"><table class="table table-sm"><thead><tr><th>Album</th><th>Artist</th><th>Year</th><th>Actions</th></tr></thead><tbody>';
                      albums.forEach(album => {
                        html += '<tr>';
                        html += '<td><img src="' + (album.coverImageUrl || '/assets/default-album.png') + '" class="rounded me-2" width="25" height="25">' + album.title + '</td>';
                        html += '<td>' + (album.artistName || 'Unknown') + '</td>';
                        html += '<td>' + (album.year || 'N/A') + '</td>';
                        html += '<td>' +
                            '<a href="/Albums/Edit/' + album.id + '" class="btn btn-sm btn-outline-primary me-1">Edit</a>' +
                            '<a href="/Albums/Delete/' + album.id + '" class="btn btn-sm btn-outline-danger">Delete</a>' +
                            '</td>';
                        html += '</tr>';
                    });
                    
                    html += '</tbody></table></div>';
                    container.innerHTML = html;
                } else {
                    container.innerHTML = '<p class="text-muted text-center">No albums found</p>';
                }
            } catch (error) {
                container.innerHTML = '<p class="text-danger text-center">Error loading albums</p>';
            }
        }        async function loadSongsContent() {
            const container = document.getElementById('songs-content');
            if (!container) return;
            
            try {                const response = await fetch('http://localhost:5117/api/Songs?pageSize=5');
                const result = await response.json();
                
                if (result && result.data) {
                    const songs = result.data;
                    let html = '<div class="table-responsive"><table class="table table-sm"><thead><tr><th>Song</th><th>Artist</th><th>Duration</th><th>Actions</th></tr></thead><tbody>';
                      songs.forEach(song => {
                        // Handle duration format - it's a timespan string like "00:03:22.8000000"
                        let duration = 'N/A';
                        if (song.duration) {
                            const timeSpan = song.duration.split(':');
                            if (timeSpan.length >= 2) {
                                const minutes = parseInt(timeSpan[1]);
                                const seconds = Math.floor(parseFloat(timeSpan[2] || '0'));
                                duration = minutes + ':' + String(seconds).padStart(2, '0');
                            }
                        }
                        html += '<tr>';
                        html += '<td>' + song.title + '</td>';
                        html += '<td>' + (song.artistName || 'Unknown') + '</td>';
                        html += '<td>' + duration + '</td>';
                        html += '<td>' +
                            '<a href="/Songs/Edit/' + song.id + '" class="btn btn-sm btn-outline-primary me-1">Edit</a>' +
                            '<a href="/Songs/Delete/' + song.id + '" class="btn btn-sm btn-outline-danger">Delete</a>' +
                            '</td>';
                        html += '</tr>';
                    });
                    
                    html += '</tbody></table></div>';
                    container.innerHTML = html;
                } else {
                    container.innerHTML = '<p class="text-muted text-center">No songs found</p>';
                }
            } catch (error) {
                container.innerHTML = '<p class="text-danger text-center">Error loading songs</p>';
            }
        }
    </script>
}