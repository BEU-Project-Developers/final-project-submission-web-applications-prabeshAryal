@model List<MusicApp.Models.Artist>
@{
    ViewData["Title"] = "Artists";
    // Define theme variables locally for easier access in inline styles if needed,
    // but prefer using CSS classes that leverage the layout's variables.
    var ytmBgPrimary = "var(--ytm-bg-primary)";
    var ytmBgSecondary = "var(--ytm-bg-secondary)";
    var ytmBgTertiary = "var(--ytm-bg-tertiary)";
    var ytmTextPrimary = "var(--ytm-text-primary)";
    var ytmTextSecondary = "var(--ytm-text-secondary)";
    var ytmAccentRed = "var(--ytm-accent-red)";
    var ytmBorderColor = "var(--ytm-border-color)";
}

@* Add specific styles for this page *@
<style>
    .artist-grid-item {
        text-align: center;
        margin-bottom: 2rem; /* Spacing below each item */
        position: relative; /* For absolute positioning of hover effects if needed */
        overflow: hidden; /* Ensure content fits */
        border-radius: 8px; /* Slightly rounded container */
        transition: background-color 0.2s ease-in-out;
        padding: 1rem; /* Padding inside the item container */
    }

        .artist-grid-item:hover {
            background-color: var(--ytm-bg-secondary); /* Use theme variable for hover */
        }

    .artist-image-wrapper {
        width: 150px; /* Container size for the image */
        height: 150px;
        margin: 0 auto 1rem auto; /* Center the image wrapper and add space below */
        position: relative;
        overflow: hidden;
        border-radius: 50%; /* Make the wrapper circular */
        border: 2px solid var(--ytm-border-color); /* Optional subtle border */
    }

    .artist-image {
        display: block;
        width: 100%;
        height: 100%;
        object-fit: cover; /* Cover the area, cropping if necessary */
        transition: transform 0.3s ease;
    }

    .artist-grid-item:hover .artist-image {
        transform: scale(1.05); /* Slight zoom on hover */
    }

    .artist-name {
        font-size: 1.1rem;
        font-weight: 500;
        color: var(--ytm-text-primary); /* Use theme variable */
        margin-bottom: 0.25rem;
        /* Prevent long names from breaking layout */
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }

    .artist-genre {
        font-size: 0.85rem;
        color: var(--ytm-text-secondary); /* Use theme variable */
        margin-bottom: 0.5rem;
    }

    /* Make the whole item clickable */
    .artist-link {
        text-decoration: none;
        color: inherit; /* Inherit text color */
        display: block; /* Make the link fill the container */
        position: absolute; /* Cover the entire grid item */
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        z-index: 1; /* Place link above content visually, but below hover effects if any */
    }

    /* Optional: Play button overlay on hover */
    .play-overlay {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: rgba(0, 0, 0, 0.5);
        display: flex;
        justify-content: center;
        align-items: center;
        opacity: 0;
        transition: opacity 0.3s ease;
        border-radius: 50%; /* Match image wrapper */
        z-index: 2; /* Above image, below link */
        pointer-events: none; /* Allow clicks to go through to the link */
    }

    .artist-grid-item:hover .play-overlay {
        opacity: 1;
    }

    .play-icon {
        color: white;
        font-size: 3rem; /* Adjust size as needed */
    }


    /* Filter Buttons Styling */
    .filter-btn-group .btn {
        border-radius: 20px; /* Rounded pill shape */
        margin: 0 0.25rem; /* Spacing between buttons */
        padding: 0.3rem 1rem;
        font-size: 0.9rem;
        border-color: var(--ytm-border-color);
        color: var(--ytm-text-secondary);
        background-color: var(--ytm-bg-tertiary);
        transition: background-color 0.2s ease, color 0.2s ease;
    }

        .filter-btn-group .btn:hover {
            background-color: var(--ytm-border-color); /* Darker grey on hover */
            color: var(--ytm-text-primary);
        }

        .filter-btn-group .btn.active {
            background-color: var(--ytm-text-primary); /* White background for active */
            color: var(--ytm-bg-primary); /* Dark text for active */
            border-color: var(--ytm-text-primary);
            font-weight: 500;
        }

    /* Pagination Styling */
    .pagination .page-item .page-link {
        background-color: var(--ytm-bg-secondary);
        border: 1px solid var(--ytm-border-color);
        color: var(--ytm-text-secondary);
        margin: 0 2px; /* Spacing */
        border-radius: 4px; /* Slightly rounded */
    }

    .pagination .page-item.active .page-link {
        background-color: var(--ytm-accent-red);
        border-color: var(--ytm-accent-red);
        color: var(--ytm-text-primary);
        z-index: 3; /* Ensure active is on top */
    }

    .pagination .page-item:not(.active) .page-link:hover {
        background-color: var(--ytm-bg-tertiary);
        color: var(--ytm-text-primary);
    }

    .pagination .page-item.disabled .page-link {
        background-color: var(--ytm-bg-secondary);
        border-color: var(--ytm-border-color);
        color: var(--ytm-text-secondary);
        opacity: 0.5;
    }

    /* Alert Box Styling */
    .alert-info-themed {
        background-color: var(--ytm-bg-secondary);
        color: var(--ytm-text-primary);
        border: 1px solid var(--ytm-border-color);
        border-left: 5px solid var(--ytm-accent-red); /* Accent border */
        border-radius: 4px;
        padding: 1rem;
    }

        .alert-info-themed h4 {
            color: var(--ytm-text-primary);
            margin-bottom: 0.5rem;
        }

        .alert-info-themed p {
            color: var(--ytm-text-secondary);
            margin-bottom: 0;
        }

</style>

@* Themed Alert Box *@
<div class="alert alert-info-themed mb-4">
    <h4>Discover Artists</h4>
    <p>Browse the diverse collection of artists on the platform.</p>
</div>

@* Page Title and Filters *@
<div class="d-flex flex-wrap justify-content-between align-items-center mb-4 gap-3">
    @* Added flex-wrap and gap *@
    <h1 class="mb-0">Artists</h1> @* Removed margin bottom from h1 for better alignment *@
    <div class="btn-group filter-btn-group" role="group" aria-label="Artist Filters">
        @* Add JS later to handle filter clicks and update the list *@
        <button type="button" class="btn active">All</button>
        <button type="button" class="btn">Popular</button>
        <button type="button" class="btn">New</button>
    </div>
</div>

@* Artist Grid *@
<div class="row row-cols-1 row-cols-sm-2 row-cols-md-3 row-cols-lg-4 row-cols-xl-5 g-4">
    @if (Model != null && Model.Any())
    {
        @foreach (var artist in Model)
        {
            <div class="col">
                <div class="artist-grid-item">
                    @* Link covering the entire item *@
                    <a href="@Url.Action("Details", "Artists", new { id = artist.Id })" class="artist-link" aria-label="View details for @artist.Name"></a>

                    @* Image Wrapper (Circular) *@
                    <div class="artist-image-wrapper">
                        <img src="@artist.ImageUrl" class="artist-image" alt="@artist.Name"
                             onerror="this.onerror=null; this.src='https://placehold.co/300x300/212121/AAAAAA?text=Artist';"> @* Basic placeholder fallback *@
                        @* Optional Play Button Overlay *@
                        <div class="play-overlay">
                            <i class="bi bi-play-fill play-icon"></i>
                        </div>
                    </div>

                    @* Artist Info *@
                    <div class="artist-info">
                        <div class="artist-name" title="@artist.Name">@artist.Name</div>
                        <div class="artist-genre">@artist.Genre</div>
                        @* Removed album count and details button - now whole card links *@
                    </div>
                </div>
            </div>
        }
    }
    else
    {
        <div class="col-12">
            <p class="text-center" style="color: var(--ytm-text-secondary);">No artists found.</p>
        </div>
    }
</div>

@* Pagination (Themed) *@
@* Note: This pagination is static. Real pagination requires backend logic. *@
<nav aria-label="Artist pagination" class="mt-5 d-flex justify-content-center">
    <ul class="pagination">
        <li class="page-item disabled">
            <a class="page-link" href="#" tabindex="-1" aria-disabled="true">
                <i class="bi bi-chevron-left"></i> @* Icon for Previous *@
            </a>
        </li>
        <li class="page-item active" aria-current="page"><a class="page-link" href="#">1</a></li>
        <li class="page-item"><a class="page-link" href="#">2</a></li>
        <li class="page-item"><a class="page-link" href="#">3</a></li>
        <li class="page-item">
            <a class="page-link" href="#">
                <i class="bi bi-chevron-right"></i> @* Icon for Next *@
            </a>
        </li>
    </ul>
</nav>
